name: Deploy AMI build using packer

on:
  
  push:
    branches: [main]

  # Allows you to run this workflow mannually 
  workflow_dispatch:

jobs:
  #  Creting jar file and saving it to webservice folder
  buildArtifact:
    runs-on: ubuntu-latest

    steps:
      - name: Set up the mySql environment
        run: |
          echo "sudo apt-get update"
          sudo apt-get update
          sudo apt-get upgrade -y
          echo "sudo apt-get install mysql-server -y"
          sudo apt-get install mysql-server -y
          echo "####starting the service####"
          sudo systemctl start mysql.service
          echo "####checking status of the server######"
          sudo systemctl status mysql.service
          echo "###creating password root######"
          sudo mysql -u root -proot -e "ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'root';"

      - uses: actions/checkout@v1
      - name: Create webservice folder
        run: mkdir webservice

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      - name: Creating jar for application
        run:  mvn clean install

      - name: Check jar file created or not
        run: ls -la && cd target && ls -la

      - name: Copy jar file to webservice folder
        run: cp target/application-0.0.1-SNAPSHOT.jar ./webservice

      - name: switch to webservice folder
        run: cd webservice && ls -la

      - name: Save the webservice folder with jar file to artifact
        uses: actions/upload-artifact@v1
        with:
          name: webservice
          path: ${{ github.workspace }}/webservice

  # Build an AMI 
  amibuild:
    runs-on: ubuntu-latest
    needs:   buildArtifact

    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: webservice

      - name: Display structure of downloaded files
        run: ls -la

      - name: Packer AMI Build
        uses: hashicorp/packer-github-actions@master
        with:
          command: build
          working_directory: Packer
          target: ami.pkr.hcl
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_KEY_ID: ${{ secrets.AWS_SECRET_KEY_ID }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_SOURCE_AMI: ${{ secrets.AWS_SOURCE_AMI }}
          AWS_DEFAULT_SUBNET: ${{ secrets.AWS_DEFAULT_SUBNET }}
          AWS_USERNAME: ${{ secrets.AWS_USERNAME }}
          AMI_USERS: ${{ secrets.AMI_USERS }}
          AWS_VPC_ID: ${{ secrets.AWS_VPC_ID }}
